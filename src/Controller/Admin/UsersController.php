<?php

namespace App\Controller\Admin;

use App\Controller\AppController;
use Cake\Event\Event;

class UsersController extends AppController
{
    // É um evento que é executado antes da actions
    public function beforeFilter(Event $event)
    {
        parent::beforeFilter($event); // TODO: Change the autogenerated stub
        //Libera a ação para não precisar fazer login
        $this->Auth->allow(['add', 'edit']);
        $this->Auth->deny(['edit']);
    }

    public function index()
    {
        //
        $users = $this->paginate($this->Users);
        //$this->set(['users' => $usersList]);
        $this->set(compact('users'));
    }

    public function add()
    {
        //Acessa a entidade e cria uma nova entidade (um objeto)
        $user = $this->Users->newEntity();

        // Verifica se é uma requisição post
        if ($this->request->is('post')) {
            // Recupera os dados do formulário
            //var_dump($this->request->data);
            //$user->name = $this->request->data['name'];
            $user = $this->Users->patchEntity($user, $this->request->data);

            if($this->Users->save($user)) {
                $this->Flash->success('Salvo com sucesso');
                $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error('Não pode ser salvo');
            }
        }
        $this->set(compact('user'));
    }

    public function edit($id)
    {
        $user = $this->Users->get($id);

        if ($this->request->is(['post', 'put'])) {
            $user = $this->Users->patchEntity($user, $this->request->data);

            if($this->Users->save($user)) {
                $this->Flash->success('Salvo com sucesso');
            } else {
                $this->Flash->error('Não pode ser salvo');
            }
        }
        $this->set(compact('user'));
    }

    public function view($id)
    {
        //Aqui já tem o acesso aos dados
        $user = $this->Users->get($id);
        $this->set(compact('user'));
    }

    public function delete($id)
    {
        //Aqui evita a pessoa pela url deletar um usuário.
        $this->request->allowMethod(['post', 'delete']);
        $user = $this->Users->get($id);

        if($this->Users->delete($user)) {
            $this->Flash->success('Removido com sucesso');
        } else {
            $this->Flash->error('Não pode ser removido');
        }

        //$this->redirect(['controller' => 'users', 'action' => 'index']);
        $this->redirect(['action' => 'index']);
    }

    public function login()
    {
        if ($this->request->is('post')) {
            //debug($this->request->data());
            // Ele verifica se o usuário existi
            $user = $this->Auth->identify();
            debug($user);
            if ($user) {
                // Guarda as informações ns sessão
                $this->Auth->setUser($user);
                //Recebe a url no banco de dados
                return $this->redirect($this->Auth->redirectUrl());
            }
        }
    }

    public function logout()
    {
        $this->Auth->logout();
        return $this->redirect(['action' => 'login']);
    }
}